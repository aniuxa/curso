install.packages("sjPlot", dependencies = T)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("sjPlot", dependencies=T) # solito porque da problmas
library(sjPlot)
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, # sobretodo para dplyr
haven, #importación
sjlabelled, # etiquetas
DescTools, # Paquete para estimaciones y pruebas
infer, # tidy way
broom,  # Una escobita para limpiar (pero es para arreglar)
estimatr, car, stargazer, ggpubr,
jtools, lm.beta, robustbase, sandwich,
officer,flextable,huxtable, ggstance, kableExtra) # Para la regresión
SDEMT122 <- read_dta("datos/SDEMT122.dta")
tabyl(SDEMT122$pos_ocu)
#install.packages("sjPlot", dependencies=T) # solito porque da problmas
library(sjPlot)
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, # sobretodo para dplyr
haven, #importación
janitor, #tablas
sjlabelled, # etiquetas
DescTools, # Paquete para estimaciones y pruebas
infer, # tidy way
broom,  # Una escobita para limpiar (pero es para arreglar)
estimatr, car, stargazer, ggpubr,
jtools, lm.beta, robustbase, sandwich,
officer,flextable,huxtable, ggstance, kableExtra) # Para la regresión
tabyl(SDEMT122$pos_ocu)
tabyl(SDEMT122$imssissste)
mydata<- SDEMT122 %>%
filter(clase2==1) %>%  # me quedo con la población ocupada
filter(ing_x_hrs>0) %>% # ingresos válidso
filter(anios_esc<99) %>% # quito missings anios de escolaridad
filter(eda>14 & eda<99) %>% #PET
filter(pos_ocu)
mydata<- SDEMT122 %>%
filter(clase2==1) %>%  # me quedo con la población ocupada
filter(ing_x_hrs>0) %>% # ingresos válidso
filter(anios_esc<99) %>% # quito missings anios de escolaridad
filter(eda>14 & eda<99) %>% #PET
select(eda, sex, anios_esc, ing_x_hrs, pos_ocu, imssissste, medica5c)
tail(mydata)
mydata %>%
ggplot()+
aes(anios_esc, log(ing_x_hrs)) +
geom_jitter()
mydata$log_ing_x_hrs<-log(mydata$ing_x_hrs)
cor(mydata$log_ing_x_hrs, mydata$anios_esc,  use = "pairwise")
mydata %>%
ggplot()+
aes(anios_esc, log(ing_x_hrs)) +
geom_jitter()
mydata$log_ing_x_hrs<-log(mydata$ing_x_hrs)
cor(mydata$log_ing_x_hrs, mydata$anios_esc,  use = "pairwise")
mydata %>%
with(
cor.test(log_ing_x_hrs, anios_esc, use="pairwise.complete.obs")
)
cor_test<-mydata %>%
with(
cor.test(log_ing_x_hrs, anios_esc, use="pairwise.complete.obs")
)
#dos modos de visualizar el resultado
cor_test
tidy(cor_test)
hist(log(mydata$ing_x_hrs))
modelo <-lm(log_ing_x_hrs ~anios_esc, data=mydata,
na.action=na.exclude)
summary(modelo) # show results
plot(modelo)
modelo <-lm(log_ing_x_hrs ~anios_esc, data=mydata,
na.action=na.exclude)
summary(modelo) # resultados
plot(modelo)
# Assessing Outliers
outlierTest(modelo) # Bonferonni p-value for most extreme obs
out<-outlierTest(modelo) # guardamos en objeto
ggpubr::ggqqplot(mydata$log_hrs)
names(out$bonf.p)
as.integer(names(out$bonf.p))
outliers<-rbind(as.integer(names(out$bonf.p)), qqPlot) # lista los casos
tidy(modelo2)%>%
kbl() %>%
kable_paper("hover", full_width = F)
modelo_log<-lm(log(ing_x_hrs) ~ log(anios_esc) + sex,
data=mydata,
na.action = na.exclude)
#install.packages("sjPlot", dependencies=T) # solito porque da problmas
library(sjPlot)
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, # sobretodo para dplyr
haven, #importación
janitor, #tablas
sjlabelled, # etiquetas
DescTools, # Paquete para estimaciones y pruebas
infer, # tidy way
broom,  # Una escobita para limpiar (pero es para arreglar)
estimatr, car, stargazer, ggpubr,
jtools, lm.beta, robustbase, sandwich,
officer,flextable,huxtable, ggstance, kableExtra) # Para la regresión
SDEMT122 <- read_dta("datos/SDEMT122.dta")
mydata<- SDEMT122 %>%
filter(clase2==1) %>%  # me quedo con la población ocupada
filter(ing_x_hrs>0) %>% # ingresos válidso
filter(anios_esc<99) %>% # quito missings anios de escolaridad
filter(eda>14 & eda<99) %>% #PET
select(eda, sex, anios_esc, ing_x_hrs, pos_ocu, imssissste, medica5c)
tail(mydata)
mydata %>%
ggplot()+
aes(anios_esc, log(ing_x_hrs)) +
geom_jitter()
mydata$log_ing_x_hrs<-log(mydata$ing_x_hrs)
cor(mydata$log_ing_x_hrs, mydata$anios_esc,  use = "pairwise")
cor_test<-mydata %>%
with(
cor.test(log_ing_x_hrs, anios_esc, use="pairwise.complete.obs")
)
#dos modos de visualizar el resultado
cor_test
tidy(cor_test)
mydata %>%
ggplot()+
aes(anios_esc,
log(ing_x_hrs),
color=as_label(sexo)) +
geom_jitter() +
facet_wrap(vars(as_label(sexo)))
mydata %>%
ggplot()+
aes(anios_esc,
log(ing_x_hrs),
color=as_label(sex)) +
geom_jitter() +
facet_wrap(vars(as_label(sex)))
mydata %>%
ggplot()+
aes(anios_esc,
log(ing_x_hrs),
color=as_label(sex)) +
geom_jitter() +
geom_smooth(method="lm")+
facet_wrap(vars(as_label(sex)))
modelo_log<-lm(log(ing_x_hrs) ~ log(anios_esc) + sex,
data=mydata,
na.action = na.exclude)
mydata2<-mydata %>% filter(anios_esc>0)
modelo_log<-lm(log(ing_x_hrs) ~ log(anios_esc) + sex,
data=mydata2,
na.action = na.exclude)
summary(modelo_log)
#install.packages("sjPlot", dependencies=T) # solito porque da problmas
library(sjPlot)
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, # sobretodo para dplyr
haven, #importación
janitor, #tablas
sjlabelled, # etiquetas
DescTools, # Paquete para estimaciones y pruebas
infer, # tidy way
broom,  # Una escobita para limpiar (pero es para arreglar)
estimatr, car, stargazer, ggpubr,
jtools, lm.beta, robustbase, sandwich,
officer,flextable,huxtable, ggstance, kableExtra) # Para la regresión
# ==============================================================================
# Fecha: 2022-01-10
# Paquetes a utilizar
# Autora: Ana Escoto
# ==============================================================================
# Paquetes
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, # conjunto de paquetes tidy
broom, # paquete para adecuar resultados estadísticos
car, # para la regresión lineal
DescTools, #caja de herramientas estadísticas
esquisse, # para hacer ggplot con drag and drop
estimatr, # Fast Estimators for Design-Based Inference
extdplyr, # extensión de dplyr
ggpubr, # Extensión de ggplot
gtsummary, # para mostrar resultados
haven, # importa archivos desde formatos .dta y .sav
janitor,# para tabulado y limpieza de nombres
infer, # tibble format de inferencias
magrittr, # para algunos pipes
modelsummary, # para resultados de modelos
gt, # grammar of tables
kableExtra, # para publicar
lm.beta, # para coeficientes beta
RColorBrewer, #paletas de color
wesanderson, #paletas de color películas Wes Anderson
robustbase, # Para estimaciones de modelos robustos
sjlabelled, #manejo de etiquetas y edición
sjPlot, #graficos de estimaciones de modelos
stargazer, #Tablas de estimaciones de modelos
srvyr # diseño muestral
)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("sjPlot", dependencies=T) # solito porque da problmas
library(sjPlot)
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, # sobretodo para dplyr
haven, #importación
janitor, #tablas
sjlabelled, # etiquetas
DescTools, # Paquete para estimaciones y pruebas
infer, # tidy way
broom,  # Una escobita para limpiar (pero es para arreglar)
estimatr, car, stargazer, ggpubr,
jtools, lm.beta, robustbase, sandwich,
officer,flextable,huxtable, ggstance, kableExtra) # Para la regresión
source("~/Dropbox/2022/Archivo/paquetes.R", echo=TRUE)
source("~/Dropbox/FCPyS-2020-ii/SOCDEM/rstudio-export (2)/paquetes.R")
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud2, ggwordcloud,
quanteda, e1071, plyr, stringr, MASS, sentimentr,
sjlabelled, knitr, jsonlite, rjson, RColorBrewer, XML,
reshape2, ggraph, qgraph, topicmodels, readxl, janitor,
broom, ggthemes, wesanderson)
install.packages("cowsay")
tabyl(mydata$imssissste)
mydata %>% mutate(imssissste=as_label(imssissste)) %>% tabyl(imssissste)
knitr::opts_chunk$set(echo = TRUE)
mydata$y_binomial<-mydata$imssissste<4
mydata$y_binomial<-as_numeric(y_binomial)
mydata$y_binomial<-mydata$imssissste<4
mydata$y_binomial<-as_numeric(mydata$y_binomial)
mydata %>%
tabyl(y_binomial)
knitr::opts_chunk$set(echo = TRUE)
mydata %>%
ggplot()+
aes(anios_esc, log(ing_x_hrs)) +
geom_jitter()
#install.packages("sjPlot", dependencies=T) # solito porque da problmas
library(sjPlot)
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, # sobretodo para dplyr
haven, #importación
janitor, #tablas
sjlabelled, # etiquetas
DescTools, # Paquete para estimaciones y pruebas
infer, # tidy way
broom,  # Una escobita para limpiar (pero es para arreglar)
estimatr, car, stargazer, ggpubr,
jtools, lm.beta, robustbase, sandwich,
officer,flextable,huxtable, ggstance, kableExtra) # Para la regresión
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
library(sjPlot)
pacman::p_load(tidyverse)
#install.packages("sjPlot", dependencies=T) # solito porque da problmas
library(sjPlot)
if (!require("pacman")) install.packages("pacman") # instala pacman si se requiere
pacman::p_load(tidyverse, # sobretodo para dplyr
haven, #importación
janitor, #tablas
sjlabelled, # etiquetas
DescTools, # Paquete para estimaciones y pruebas
infer, # tidy way
broom,  # Una escobita para limpiar (pero es para arreglar)
estimatr, car, stargazer, ggpubr,
jtools, lm.beta, robustbase, sandwich,
officer,flextable,huxtable, ggstance, kableExtra) # Para la regresión
SDEMT122 <- read_dta("datos/SDEMT122.dta")
mydata<- SDEMT122 %>%
filter(clase2==1) %>%  # me quedo con la población ocupada
filter(ing_x_hrs>0) %>% # ingresos válidso
filter(anios_esc<99) %>% # quito missings anios de escolaridad
filter(eda>14 & eda<99) %>% #PET
select(eda, sex, anios_esc, ing_x_hrs, pos_ocu, imssissste, medica5c, ent)
tail(mydata)
mydata %>%
ggplot()+
aes(anios_esc, log(ing_x_hrs)) +
geom_jitter()
mydata$log_ing_x_hrs<-log(mydata$ing_x_hrs)
cor(mydata$log_ing_x_hrs, mydata$anios_esc,  use = "pairwise")
modelo <-lm(log_ing_x_hrs ~anios_esc, data=mydata,
na.action=na.exclude)
summary(modelo) # resultados
tidy(modelo) # Pruebas de hipótesis de los coeficientes
confint(modelo)
anova(modelo)
# Assessing Outliers
outlierTest(modelo) # Bonferonni p-value for most extreme obs
out<-outlierTest(modelo) # guardamos en objeto
qqPlot<-qqPlot(modelo)
ggpubr::ggqqplot(mydata$log_ing_x_hrs)
car::qqPlot(modelo, main="QQ Plot") #qq plot for studentized resid
# non-constant error variance test
ncvTest(modelo)
# plot studentized residuals vs. fitted values
spreadLevelPlot(modelo)
mydata$rownames<-rownames(mydata)
#View(mydata) # verificamos que no hayamos movido el orden
mydata2<-mydata[-outliers,]
names(out$bonf.p)
outliers<-rbind(as.integer(names(out$bonf.p)), qqPlot) # lista los casos
mydata$rownames<-rownames(mydata)
#View(mydata) # verificamos que no hayamos movido el orden
mydata2<-mydata[-outliers,]
qqPlot(modelo0)
modelo0<-lm(log_ing_x_hrs ~anios_esc, data=mydata2, na.action=na.exclude)
summary(modelo0)
modelo2<-lm(log_ing_x_hrs ~ anios_esc + as_label(sex) + eda,
data=mydata,
na.action=na.exclude)
summary(modelo2)
plot_model(modelo2, type="slope")
mydata<-mydata %>%
mutate(sex=as_label(sex))
modelo2<-lm(log_ing_x_hrs ~ anios_esc +sex + eda, data=mydata)
summary(modelo2)
plot_model(modelo2, type="slope")
